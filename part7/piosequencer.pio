.program sequencer
.side_set 1



.wrap_target
set pindirs, 1       side 0 [15]

loop:
    mov x, pins      side 0 [1]
    jmp !x do_one    side 0 [1]
do_zero:
    nop              side 0 [7]
    jmp loop         side 0 [7]
do_one:
    nop              side 1 [7]
    jmp loop         side 1 [7]
.wrap



% c-sdk {

#include "hardware/clocks.h"
static inline void sequencer_program_init(PIO pio, uint sm, uint offset, uint pin, float freq) {

  pio_sm_config config = sequencer_program_get_default_config(offset);

  pio_sm_set_in_pins(pio, sm, 21)
  sm_config_set_sideset_pins(&config, pin)
;   sm_config_set_set_pins(&config, pin, 1);how many pins figure this way 1
  pio_gpio_init(pio, pin)
  // 
  int cycles_per_bit = 16
  float div=clock_get_hz(clk_sys) / (freq*cycles_per_bit);
  sm_config_set_clkdiv(&config, div)

  pio_sm_init(pio, sm, offset, &config)
  pio_sm_set_enabled(pio, sm, true);start the program
}
%}